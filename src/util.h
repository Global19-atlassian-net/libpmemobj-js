#ifndef UTIL_H
#define UTIL_H

#include <napi.h>

enum PERSISTENT_TYPE {
  PERSISTENT_TYPE_NONE,
  PERSISTENT_TYPE_NUMBER,
  PERSISTENT_TYPE_STRING,
  PERSISTENT_TYPE_EMPTY_STRING,
  PERSISTENT_TYPE_TRUE,
  PERSISTENT_TYPE_FALSE,
  PERSISTENT_TYPE_NULL,
  PERSISTENT_TYPE_UNDEFINED,
  PERSISTENT_TYPE_OBJECT,
  PERSISTENT_TYPE_ARRAYBUFFER,
  PERSISTENT_TYPE_UNSUPPORTED
};

struct PERSISTENT_VALUE {
  PERSISTENT_TYPE type;
  const void *data;
};

#define ASSERT_TYPE(cond) \
  {}

#define ASSERT_ARGS_LENGTH(cond) \
  {}

#define ASSERT_NOT_EXCEPTION_PENDING(cond) \
  {}

#endif